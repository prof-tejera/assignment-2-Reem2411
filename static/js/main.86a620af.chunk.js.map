{"version":3,"sources":["utils/helpers.js","utils/TimerProvider.js","components/generic/Button/Button.js","utils/MyPropTypes.js","components/generic/Panel/Panel.js","components/generic/DisplayRounds/DisplayRounds.js","components/generic/DisplayTime/DisplayTime.js","components/generic/Input/Input.js","components/generic/TimerButtons/TimerButtons.js","components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","utils/hooks.js","components/generic/TimerPanel.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["vars","TimerContext","React","createContext","TimerProvider","children","stopwatch","tabata","useState","timerType","setTimerType","running","setRunning","time","setTime","userInput","setUserInput","showingTimer","setShowingTimer","pause","setPause","done","setDone","nRounds","setNRounds","currRound","setCurrRound","restTime","setRestTime","restInput","setRestInput","rest","setRest","handleDisplayTime","timeHMS","seconds","hrs","Math","floor","mins","secs","secondsToTime","Provider","value","decrement","handleStart","handlePause","handleDone","handleReset","handleRounds","Button","PropTypes","func","string","oneOfType","arrayOf","node","props","type","onClick","text","className","defaultProps","Panel","DisplayRounds","useContext","DisplayTime","roundProps","Input","placeholder","val","readOnly","parseInt","parsed","TimerButtons","Start","Pause","Reset","Done","Resume","Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","title","component","propDocs","map","doc","prop","description","defaultValue","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","console","log","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Timerpanel","input","Stopwatch","TimerPanel","Countdown","countdown","XY","xy","Tabata","App","timers","C","state","setState","timer","i","to","path","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86a620af.chunk.js","sourcesContent":["// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n// Use constants instead of strings \nexport const vars = {\n    \n    stopwatch: 'Stopwatch',\n    countdown: 'Countdown',\n    tabata: 'Tabata',\n    xy: 'XY',\n    work: 'work', \n    rest: 'rest', \n    pause: 'pause', \n    reset: 'reset',\n    end: 'end',\n}\n\n// Got some help from here https://stackoverflow.com/questions/40885923/countdown-timer-in-react\nexport const secondsToTime = (seconds) => {\n    const hrs = Math.floor(seconds / (60 * 60));\n    const mins  =  Math.floor(seconds % (60 * 60) / 60);\n    const secs =  Math.floor(seconds % (60 * 60) % 60); \n    return `${hrs}:${mins}:${secs}`;\n  }\n\n","import { vars } from \"./helpers\";\nimport React, {useState} from 'react';\nimport { secondsToTime } from \"./helpers\";\n\nexport const TimerContext = React.createContext({});\n\nconst TimerProvider = ({ children }) => {\n  const {stopwatch, tabata} = vars; \n\n  // Moving all states in individual timers to here \n  const [ timerType, setTimerType] = useState(stopwatch); // Set type of timer (XY, Tabata, Countdown or Stopwatch) default is Countdown\n  const [ running, setRunning ] = useState(false); // Keep track of which timer is running \n  const [ time, setTime ] = useState(0); // Actual running time \n  const [ userInput, setUserInput] = useState(0);  // work time\n  const [ showingTimer, setShowingTimer] = useState(\"0:0:0\");\n  const [ pause, setPause] = useState(false);\n  const [ done, setDone] = useState(false);\n  const [ nRounds, setNRounds ] = useState(1); // Tabata/XY\n  const [ currRound, setCurrRound ] = useState(1); // Tabata/XY\n  const [ restTime, setRestTime ] = useState(0); // Tabata\n  const [ restInput, setRestInput] = useState(0);// Tabata\n  const [ rest, setRest ] = useState(false); \n\n  // Decrementing \n  const decrement = (time, userInput, timerType) => {\n    handleDisplayTime(time, userInput, timerType);\n    if(timerType === tabata && rest === true){\n      setRestTime(time-1);\n    } else if (rest === false ) {\n      setTime(time-1);\n    }\n  }\n\n  const handleDisplayTime = (time, timerType, userInput) => {\n    const timeHMS = secondsToTime(time ? time : 0)\n    setShowingTimer(timeHMS);\n    if(timerType === tabata && rest === true){\n      setRestTime(time);\n    } else if (rest === false ){\n      setTime(time);\n    }\n  }\n\n  const handleStart = () => {\n    setRunning(true);\n  }\n\n  const handlePause = () => {\n    setPause(true);\n    setRunning(false); \n  }\n\n  const handleDone = () => {\n    setDone(true);\n    setRunning(false);\n  }\n  const handleReset = (timerType, userInput) => {\n   switch (timerType){\n      case stopwatch:\n        setTime(0);\n        break;\n      default:\n        setTime(userInput);\n        setCurrRound(1);  \n    }\n    setRunning(false); \n    setPause(false);\n    setDone(false); \n    setRestTime(restInput);   \n    setRest(false);    \n  }\n\n  const handleRounds = (currRound, nRounds) => {\n    if (currRound < nRounds){\n      setTime(userInput);\n    } else {\n      setDone(true);\n      setRunning(false);\n    }\n  }\n\n  return (\n    <TimerContext.Provider\n      value={{ \n        timerType,\n        running,\n        time, \n        setRestTime, \n        restTime, \n        rest,\n        restInput, \n        setRestInput,\n        setRest,\n        nRounds,\n        setNRounds,\n        currRound, \n        setCurrRound,\n        decrement, \n        setTimerType,\n        setTime, \n        handleStart,\n        handlePause, \n        handleDone, \n        handleReset,\n        userInput, \n        setUserInput, \n        handleDisplayTime,\n        showingTimer,\n        setShowingTimer,\n        setRunning,\n        pause, \n        setPause,\n        done,\n        setDone, \n        handleRounds, \n      }}>\n        {children}\n    </TimerContext.Provider>);   \n};\n  \nexport default TimerProvider;\n\n\n","import MyPropTypes from \"../../../utils/MyPropTypes\";\nimport './Button.css';\n\nconst Button = (props) => {\n    const {type, onClick, text} = props;\n    return (\n      <button className={`Default-button ${type}`} onClick={onClick}>\n        {text}\n      </button>\n    );\n}\n\nButton.propTypes = {\n  type: MyPropTypes.type,\n  text: MyPropTypes.text,\n  onClick: MyPropTypes.onClick.isRequired,\n}\nButton.defaultProps = {\n  type: \"\",\n  text: \"Click Here\",\n}\n\nexport default Button;\n","// Its useful to create our own PropTypes so we\n// don't have to repeat the definition everywhere\nimport PropTypes from \"prop-types\";\nconst MyPropTypes = {\n\n    // Functions used throughout \n    onClick: PropTypes.func,\n\n    // Button props \n    type: PropTypes.string,\n    text: PropTypes.string, \n\n    // Input props\n    placeholder: PropTypes.string,\n\n    // Panel props\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n  };\n\nexport default MyPropTypes;","import MyPropTypes from \"../../../utils/MyPropTypes\";\nimport './panel.css';\n\nconst Panel = (props) => {\n  const {type, children} = props;\n    return <div className={`Default-panel ${type}`}>{children}</div>;\n}\n\nPanel.propTypes = {\n  type: MyPropTypes.type,\n  children: MyPropTypes.children,\n}\n\nPanel.defaultProps = {\n  type: \"\",\n}\n\nexport default Panel;\n","import React, {useContext} from \"react\";\nimport { TimerContext } from \"../../../utils/TimerProvider\";\n\nconst DisplayRounds = () => {\n\n    const {currRound, nRounds, rest} = useContext(TimerContext);\n    return (\n        <div className=\"roundsintimer\">\n            <p> Round {currRound} of {nRounds} </p>\n            {rest && <p>REST</p>}\n        </div>\n    )\n}\n\nexport default DisplayRounds;","import Panel from \"../Panel/Panel\";\nimport React, {useContext}  from 'react';\nimport DisplayRounds from \"../DisplayRounds/DisplayRounds\";\nimport { TimerContext } from \"../../../utils/TimerProvider\";\nimport { vars } from \"../../../utils/helpers\";\nimport './DisplayTime.css';\n\nconst DisplayTime = () => {\n\n    const {showingTimer, done, timerType} = useContext(TimerContext);\n    let { roundProps} = false;\n    const {xy, tabata} = vars; \n\n    if (timerType === xy || timerType === tabata){\n        roundProps = true;\n    } \n    return (\n        <Panel>\n            <div className={`Timer ${done ? 'congrats' : ''}`}>\n                {roundProps && <DisplayRounds/>}                                      \n                <span>{showingTimer}</span>\n            </div> \n            \n        </Panel>\n    );\n\n};\n\nexport default DisplayTime;\n","import { useContext } from 'react';\nimport MyPropTypes from \"../../../utils/MyPropTypes\";\nimport Button from '../Button/Button';\nimport { TimerContext } from '../../../utils/TimerProvider';\nimport './Input.css';\n\nconst Input = (props) => {\n  const {userInput, setUserInput, setNRounds, nRounds, restInput, setRestInput} = useContext(TimerContext);\n  const {placeholder, type} = props;\n  const inc = () => {\n    if (type === \"work\"){\n      setUserInput(parseInt(userInput)+1);\n    } else if (type === \"rounds\"){\n      setNRounds(parseInt(nRounds)+1);\n    } else if (type === \"rest\"){\n      setRestInput(parseInt(restInput)+1);\n    }\n  };  \n\n  let dec = () => {\n    if (type === \"work\"){\n      const parsed = parseInt(userInput)-1;\n      setUserInput(parsed > 0 ? parsed : 0);\n    } else if (type === \"rounds\"){\n      const parsed = parseInt(nRounds)-1;\n      setNRounds(parsed > 0 ? parsed : 1);\n    } else if (type === \"rest\"){\n      const parsed = parseInt(restInput)-1;\n      setRestInput(parsed > 0 ? parsed : 1);\n    }\n  };\n\n  let val = \"\"; \n  switch (type){\n    case \"work\":\n      val = userInput;\n      break;\n    case \"rounds\":\n      val = nRounds;\n      break;\n    case \"rest\":\n      val = restInput;\n      break;\n    default:\n      break;\n  }\n  return (\n    <div className=\"inputrow\"> \n      <label>{placeholder}</label>\n\n      <div className=\"inputdiv\">\n        <input\n        className={`Default-input`}\n        value={val}\n        type={type}\n        readOnly\n        />\n      </div>\n      <div className=\"buttondiv\">\n        <Button type=\"counter\" text=\"+\" onClick={inc}/>\n        <Button type=\"counter\" text=\"-\" onClick={dec}/>\n      </div>\n    </div>\n  );\n}\n\nInput.propTypes = {\n  placeholder: MyPropTypes.placeholder,\n  type: MyPropTypes.type\n}\nInput.defaultProps = {\n  placeholder: \"Enter text\",\n  type: \"\"\n}\n\nexport default Input;\n\n","\nimport { useContext  } from 'react';\nimport { TimerContext } from '../../../utils/TimerProvider.js';\nimport Button from '../Button/Button.js';\nimport './TimerButtons.css'\n\nconst TimerButtons = () => {\n\n  // Get states from context \n  const {running, handleStart, handlePause, pause, handleDone,\n     handleReset, timerType, done, userInput} = useContext(TimerContext);\n\n  // Create variables for buttons \n  const Start = <Button \n                  text=\"Start\" \n                  onClick = {() => {\n                    handleStart();\n                  }}\n                  />\n\n  const Pause = <Button \n                  text=\"Pause\" \n                  onClick = {() => {\n                    handlePause();\n                  }}\n                  />\n  const Reset = <Button \n                  text=\"Reset\" \n                  onClick = {() => {\n                    handleReset(timerType, userInput);\n                  }}\n                  />\n  const Done = <Button \n                  text=\"Done\" \n                  onClick = {() => {\n                    handleDone();\n                  }}\n                  />\n  const Resume = <Button \n                  text=\"Resume\" \n                  onClick = {() => {\n                    handleStart();\n                  }}\n                  />\n\n    return (\n      <div className=\"ButtonsPanel\">\n        <div className=\"TimerButton\">\n          {!running && !pause && !done && Start}\n          {!running && pause && !done && Resume}\n          {running && Pause}\n          {running && Done}\n          {Reset}\n        </div>\n      </div>\n\n    );\n}\n  \nexport default TimerButtons;\n  ","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/generic/Button/Button\";\nimport Panel from \"../components/generic/Panel/Panel\";\nimport DisplayRound from \"../components/generic/DisplayRounds/DisplayRounds\";\nimport DisplayTime from \"../components/generic/DisplayTime/DisplayTime\";\nimport Input from \"../components/generic/Input/Input\";\nimport TimerButtons from \"../components/generic/TimerButtons/TimerButtons\";\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div>\n          <Title>Documentation</Title>\n          <DocumentComponent\n            title=\"Loading spinner \"\n            component={<Loading />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description: \"Changes the size of the loading spinner\",\n                type: \"string\",\n                defaultValue: \"medium\",\n              },\n            ]}\n          />\n          <DocumentComponent\n          title=\"Button \"\n          component={<Button onClick={() => console.log(\"Documentation - button clicked\")} />}\n          propDocs={[\n            {\n              prop: \"type\",\n              description: \"Flag to identify increment and decrement buttons from other ones\",\n              type: \"string\",\n              defaultValue: \"''\",\n            },\n            {\n              prop: \"text\",\n              description: \"Text to be placed on button\",\n              type: \"string\",\n              defaultValue: \"Click Here\",\n            },\n            {\n              prop: \"onClick\",\n              description: \"Actions to be performed when button is clicked\",\n              type: \"function\",\n              defaultValue: \"undefined\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"DisplayRound \"\n          component={<DisplayRound/>}\n          propDocs={[\n            {        \n              prop: \"none\",\n              description: \"Just conditionally rendering the rounds from a different component. \\n It uses the current round, total number or rounds, and rest boolean variabel from context.\",\n              type: \"div\",\n              defaultValue: \"\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"DisplayTime \"\n          component={<DisplayTime/>}\n          propDocs={[\n            {        \n              prop: \"none\",\n              description: \"Display the number either ticking up or down with the information about the rounds of the timer and other visuals.\",\n              type: \"\",\n              defaultValue: \"\",\n            }\n          ]}\n        />\n        <DocumentComponent\n          title=\"Input \"\n          component={<Input />}\n          propDocs={[\n            {\n              prop: \"type\",\n              description: \"Help identify type of input (rest, work, rounds)\",\n              type: \"string\",\n              defaultValue: \"the props in context default all inputs to either 0 or 1\",\n            },\n            {\n              prop: \"placeholder\",\n              description: \"Placeholder for the input\",\n              type: \"string\",\n              defaultValue: \"Name of input field\"\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Panel \"\n          component={<Panel />}\n          propDocs={[\n            {        \n              prop: \"children\",\n              description: \"Other divs to render inside of the panel\",\n              type: \"div\",\n              defaultValue: \"undefined\",\n            },\n            {\n              prop: \"type\",\n              description: \"Help identify different panels on page to change their CSS accordingly\",\n              type: \"string\",\n              defaultValue: \"\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Panel \"\n          component={<TimerButtons />}\n          propDocs={[\n            {        \n              prop: \"none\",\n              description: \"Uses everything it needs from context - it has all the timer controls (Start, Pause, Reset, resume).\",\n              type: \"\",\n              defaultValue: \"\",\n            },\n          ]}\n        />\n\n        \n\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","// Code from lecture notes \nimport { useEffect, useRef} from 'react';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n  \n    // Remember the latest callback.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n  \n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }","import { useContext, useEffect } from 'react';\nimport TimerButtons from \"./TimerButtons/TimerButtons\";\nimport DisplayTime from \"./DisplayTime/DisplayTime\";\nimport { TimerContext } from \"../../utils/TimerProvider\";\nimport '../timers/Timers.css'\n\n\nconst Timerpanel = ({input}) => {\n\n    const {time, handleDisplayTime, timerType, userInput} = useContext(TimerContext);\n\n    useEffect(() => {\n      handleDisplayTime(time, timerType, userInput);\n    }, [time, timerType, userInput, handleDisplayTime]);\n    \n    return(\n      <div className=\"outerPanel\">\n         <h1> {timerType} </h1>  \n        <div className=\"flip-card\">\n          <div className=\"flip-card-inner\">\n            <div className=\"flip-card-front\">     \n              <div className=\"card-DisplayTime\">\n                  <DisplayTime/>\n              </div>         \n            </div>\n            <div className=\"flip-card-back\">\n              <div className=\"inputs\">\n                {input}\n              </div>\n            </div>\n          </div> \n      </div>\n      <TimerButtons/>       \n      </div>\n    );  \n};\n\nexport default Timerpanel;\n","import React, { useContext, useEffect } from 'react';\nimport { useInterval } from '../../utils/hooks';\nimport Input from \"../generic/Input/Input\";\nimport TimerPanel from \"../generic/TimerPanel\";\nimport { vars } from '../../utils/helpers';\nimport { TimerContext } from '../../utils/TimerProvider';\nimport './Timers.css'\n\nconst Stopwatch = () => {\n\n  // Get states and variables needed\n  const {time, userInput, running, setTimerType, \n    setTime, timerType,  handleDisplayTime, \n    setRunning, setDone} = useContext(TimerContext);\n  const {stopwatch} = vars;\n  \n  useEffect(() => {\n    setTimerType(stopwatch);\n  }, [timerType, setTimerType, stopwatch]);\n\n  useInterval(() => {\n    if (time <= userInput && running === true){\n      handleDisplayTime(time, timerType);\n      setTime(time + 1);\n    } else if (time === userInput && userInput !== 0 && running === true ){\n      setDone(true);\n      setRunning(false);\n    }else {\n      setRunning(false);\n    }\n  }, 1000);   \n  \n\n  return (\n      \n      <TimerPanel\n      input={<Input\n        type=\"work\"\n        placeholder=\"End Time (s)\"\n        value={time}\n        />}\n      >\n      </TimerPanel>\n  );\n\n}\n\nexport default Stopwatch;\n","// import React from \"react\";\nimport React, { useContext, useEffect } from 'react';\nimport { useInterval } from '../../utils/hooks';\nimport Input from \"../generic/Input/Input\";\nimport TimerPanel from \"../generic/TimerPanel\";\nimport { vars } from '../../utils/helpers';\nimport { TimerContext } from '../../utils/TimerProvider';\nimport './Timers.css'\n\n\nconst Countdown = () => {\n\n  // Get states from context \n  const {time, running,\n     setTimerType, setTime, decrement, \n      userInput, timerType, setRunning, setDone} = useContext(TimerContext);\n  const {countdown} = vars;\n\n  // Countdown functionality \n  useEffect(() => {\n    setTimerType(countdown);\n    setTime(userInput);\n  }, [timerType, userInput, countdown, setTime, setTimerType]);\n\n\n  useInterval(() => {\n    if (time !== 0 && running === true ){\n      decrement(time, userInput, timerType);\n    } else if (time === 0 && userInput !== 0 && running === true ){\n      setDone(true);\n      setRunning(false);\n    }else {\n      setRunning(false);\n    }\n  }, 1000);   \n  \n  return (\n      \n      <TimerPanel\n      input={<Input\n              type=\"work\"\n              value={time}\n              placeholder=\"Work Time (s)\"\n              />}\n      >\n      </TimerPanel>\n  );\n}\n\nexport default Countdown;\n","import React, { useContext, useEffect }  from \"react\";\nimport { useInterval } from '../../utils/hooks';\nimport Input from \"../generic/Input/Input\";\nimport TimerPanel from \"../generic/TimerPanel\";\nimport { vars } from '../../utils/helpers';\nimport { TimerContext } from '../../utils/TimerProvider';\nimport './Timers.css'\n\nconst XY = () => {\n\n  // Get states and variables needed\n  const {time, running, nRounds, currRound, setTimerType, setCurrRound,\n     setTime, decrement, handleRounds, userInput, timerType} = useContext(TimerContext);\n  const {xy} = vars;\n  \n  useEffect(() => {\n    setTimerType(xy);\n    setTime(userInput);\n  }, [timerType, setTime, setTimerType, userInput, xy]);\n\n  useInterval(() => {\n    if (time !== 0 && running === true){\n      decrement(time, userInput, timerType);\n    } else if (time === 0 && running === true){\n      handleRounds(currRound, nRounds); \n      if (currRound !== nRounds){\n        setCurrRound(currRound+1);\n      }  \n    } \n  }, 1000);   \n \n  return (\n      \n      <TimerPanel\n      input={<>\n        <Input\n          type=\"work\"\n          placeholder=\"Time per Round (s)\"\n          value={time}\n\n        />\n        <Input\n          type=\"rounds\"\n          placeholder=\"Rounds (s) \"\n          value={nRounds}\n        />\n        </>}\n      >\n      </TimerPanel>\n  );\n};\n\nexport default XY;\n","import React, { useContext, useEffect }  from \"react\";\nimport Input from \"../generic/Input/Input\";\nimport TimerPanel from \"../generic/TimerPanel\";\nimport { vars } from '../../utils/helpers';\nimport { TimerContext } from '../../utils/TimerProvider';\nimport { useInterval } from '../../utils/hooks';\n\nimport './Timers.css'\n\nconst Tabata = () => {\n  \n    // Get states and variables needed\n    const {time, running, nRounds, currRound, setTimerType, restTime, setCurrRound, \n      setTime, decrement, handleRounds, userInput, timerType, setRest, restInput, setRestTime} = useContext(TimerContext);\n    const {tabata} = vars;\n  \n  useEffect(() => {\n    setTimerType(tabata);\n    setTime(userInput);\n    setRestTime(restInput);\n    // setRest(false);\n  }, [timerType, setTime, setTimerType, userInput, tabata, setRestTime, restInput, setRest]);\n\n  useInterval(() => {\n     if (time !== 0 && running === true){\n      decrement(time, userInput, timerType);\n    } else if (restTime !== 0 && running === true){\n      setRest(true);\n      decrement(restTime, restInput, timerType);\n      setRest(false);\n    } else if (time === 0 && running === true){\n      handleRounds(currRound, nRounds); // 1, 2\n      if (currRound !== nRounds){\n        setCurrRound(currRound+1);\n      }  \n    } \n  }, 1000);   \n  \n  return (\n    <TimerPanel\n      input={<>\n        <Input\n          placeholder=\"Work Time (s)\"\n          type=\"work\"\n          value={time}\n        />\n        <Input\n          placeholder=\"Rest Time (s)\"\n          type=\"rest\"\n          value={restTime}\n        />              \n        <Input\n          placeholder=\"Rounds (s)\"\n          type=\"rounds\"\n          value={nRounds}\n        />\n      </>\n      }\n      >\n    </TimerPanel>\n  );\n}\n\nexport default Tabata;\n","import React, { useState, useContext } from \"react\";\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\nimport Panel from \"../components/generic/Panel/Panel\";\nimport Button from \"../components/generic/Button/Button\";\nimport { TimerContext } from \"../utils/TimerProvider\";\n\nfunction App() {\n\n  const {handleReset, timerType, userInput} = useContext(TimerContext);\n\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    { title: \"XY\", C: <XY /> },\n    { title: \"Tabata\", C: <Tabata /> },\n  ];\n  \n  const [state, setState] = useState(0)\n  return (  \n  \n    <Panel type=\"outer\">\n      <Panel type=\"timerslist\">\n        {timers.map((timer, i) => (\n            <Button \n            key = {i}\n            onClick={() => {\n              handleReset(timerType, userInput);\n              setState(i); \n              \n            }}\n            type=\"list\"\n            text={timer.title}\n            /> \n          ))}   \n      </Panel>\n      {timers[state].C}\n   </Panel>   \n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TimerProvider from \"./utils/TimerProvider\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nfunction App() {\n  return (\n    <TimerProvider>\n      <Container>\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Timers</Link>\n            </li>\n            <li>\n              <Link to=\"/docs\">Documentation</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/docs\">\n            <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n            <TimersView/>\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n    </TimerProvider>\n    \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}